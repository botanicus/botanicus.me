front-end: React + Redux.
  https://github.com/botanicus/blog
  react-blog

Import blog posts
Assets handling in blog-generator
API: ignore draft: true
About page (i. e. https://zenhabits.net/about)
RSS (global + per tag)
    // <link rel="alternate" type="application/atom+xml" title="News" href="/atom.xml?type=news" />
    https://github.com/nfl/react-helmet or https://github.com/josepapaianni/react-declarative-head
Hire-me-ribbon: target="_blank"
Test in browsers (screenshots?)
Feed: rewrite in Nginx the URL so it doesn't appear to be on api, but rather on blog.


README: hint that MyStory is required.

svg css transformation spinner
tags

## Mailing list

# After eject

## CSS modules.

  https://github.com/css-modules/webpack-demo

  Start with https://github.com/webpack/css-loader#css-modules, but there's also
  https://github.com/gajus/react-css-modules and https://github.com/gajus/babel-plugin-react-css-modules

  Read:
    https://github.com/css-modules/css-modules
    https://medium.com/@pioul/modular-css-with-react-61638ae9ea3e#.ee62pg2z1

## CSS 4 & PostCSS.
  http://postcss.org/
  http://css4.rocks/
  http://cssnext.io/

# Later

## Redux, react-router-redux, React + GA

## Set up server-side code generating.

/*
import { createStore } from 'redux';

state {
  routes: {
    "/": {"posts": [...]},
    "/posts/learning-tango": {"title": ...},
    "/tags/tango": {"posts": [...]}
  }
}

... plug in react-router-redux.
const reducer = (state = {}, action) => {
  switch (action.type) {
    case 'DATA_FETCHED':
      return {};
    default:
      return state;
  }
}

const store = createStore(reducer);
*/
